var g=Object.defineProperty;var N=(e,t,r)=>t in e?g(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var a=(e,t,r)=>N(e,typeof t!="symbol"?t+"":t,r);const f="dice-stats",k=f,m=11;var d=(e=>(e[e.UNKNOWN=0]="UNKNOWN",e[e.D2=1]="D2",e[e.D3=2]="D3",e[e.D4=3]="D4",e[e.D6=4]="D6",e[e.D8=5]="D8",e[e.D10=6]="D10",e[e.D12=7]="D12",e[e.D20=8]="D20",e[e.D50=9]="D50",e[e.D100=10]="D100",e[e.LENGTH=11]="LENGTH",e))(d||{}),l=(e=>(e[e.UNKNOWN=0]="UNKNOWN",e[e.DESCENDING=1]="DESCENDING",e[e.ASCENDING=2]="ASCENDING",e[e.LENGTH=3]="LENGTH",e))(l||{});class u{static getDieMax(t){switch(t){case 1:return 2;case 2:return 3;case 3:return 4;case 4:return 6;case 5:return 8;case 6:return 10;case 7:return 12;case 8:return 20;case 9:return 50;case 10:return 100;default:return 0}}static getDieAverage(t){switch(t){case 1:return 1.5;case 2:return 2;case 3:return 2.5;case 4:return 3.5;case 5:return 4.5;case 6:return 5.5;case 7:return 6.5;case 8:return 10.5;case 9:return 25.5;case 10:return 50.5;default:return 0}}static dsLogError(t){console.log("DICE-STATS ERROR: "+t)}}class h{constructor(t){a(this,"type",d.UNKNOWN);a(this,"max",0);a(this,"rolledValue",-1);a(this,"totalRolls",0);a(this,"rolls",[]);a(this,"mean",0);a(this,"median",0);a(this,"mode",0);a(this,"streakDir",l.UNKNOWN);a(this,"streakSize",-1);a(this,"streakInit",-1);a(this,"longestStreakDir",l.UNKNOWN);a(this,"longestStreakSize",-1);a(this,"longestStreakInit",-1);this.type=t,this.max=u.getDieMax(t),this.rolls=new Array(this.max+1),this.clear()}clear(){this.totalRolls=0,this.rolls.fill(0),this.mean=0,this.median=0,this.mode=0,this.streakDir=l.UNKNOWN,this.streakSize=-1,this.streakInit=-1,this.longestStreakDir=l.UNKNOWN,this.longestStreakSize=-1,this.longestStreakInit=-1}addDieInfo(t,r=!1,s=!1){if(s&&t.type==this.type&&t.rolledValue>-1&&t.rolledValue<=this.max)this.addNewRoll(t.rolledValue);else if(t.type==this.type&&t.max==this.max){this.totalRolls+=t.totalRolls;for(var i=0;i<this.max;i++)this.rolls[i]+=t.rolls[i];r&&(t.streakSize>this.streakSize&&(this.streakDir=t.streakDir,this.streakInit=t.streakInit,this.streakSize=t.streakSize),t.longestStreakSize>this.longestStreakSize&&(this.longestStreakSize=t.longestStreakSize,this.longestStreakSize=t.longestStreakSize,this.longestStreakSize=t.longestStreakSize))}else u.dsLogError("Failed to add "+t+" to "+this)}addNewRoll(t){this.rolls[t]++,this.streakSize<1?(this.streakSize=1,this.streakInit=t,this.streakDir=l.UNKNOWN):((this.streakDir==l.UNKNOWN||this.streakDir==l.ASCENDING)&&t==this.streakInit+this.streakSize?(this.streakDir=l.ASCENDING,this.streakSize++):(this.streakDir==l.UNKNOWN||this.streakDir==l.DESCENDING)&&t==this.streakInit-this.streakSize?(this.streakDir=l.DESCENDING,this.streakSize++):(this.streakDir=l.UNKNOWN,this.streakSize=1,this.streakInit=t),this.streakSize>this.longestStreakSize&&(this.longestStreakDir=this.streakDir,this.longestStreakInit=this.streakInit,this.longestStreakSize=this.streakSize))}calculateTotalRolls(){var t=0;for(let r of this.rolls)t+=r;return t}calculateMean(){if(!this.rolls||this.rolls.length==0)return 0;var t=0,r=0;for(let s=0;s<this.rolls.length;s++)t+=this.rolls[s],r=r+(s+1)*this.rolls[s];return t>0?(r/t).toFixed(2):0}calculateMedian(){if(!this.rolls||this.rolls.length==0)return 0;let t=0;for(let s=0;s<this.rolls.length;s++)t+=this.rolls[s];if(t>1){let s=0;t%2===0?s=Math.floor(t/2):s=Math.floor(t/2)+1;for(let i=0;i<this.rolls.length;i++){for(var r=this.rolls[i];r!=0&&s!=0;)s--,r--;if(s===0)return i+1}}else if(t===1){for(let s=0;s<this.rolls.length;s++)if(this.rolls[s]===1)return s+1}return 0}calculateMode(){if(!this.rolls||this.rolls.length==0)return 0;var t=0,r=0;for(let s=0;s<this.rolls.length;s++)this.rolls[s]>r&&(t=s,r=this.rolls[s]);return t+1}static createDieInfoAry(){for(var t=new Array(m),r=0;r<m;r++)t[r]=new h(r);return t}}class S{constructor(){a(this,"DEGREE_SUCCESS",{});a(this,"system_id","")}getDisplayData(){}addSystemData(t){}parseRollMessage(t){}clear(){}}class D{static createSystemData(t){switch(t){case"pf2e":return new S;default:return new S}}}class y{constructor(t,r,s,i){a(this,"_userId","");a(this,"_userName","");a(this,"_isGm",!1);a(this,"_playerForm",0);a(this,"_diceInfo");a(this,"_systemInfo");this._userId=t,this._userName=r,this._isGm=s,this._diceInfo=h.createDieInfoAry(),this._systemInfo=D.createSystemData(i)}getUsername(){return this._userName}getUserID(){return this._userId}getIsGm(){return this._isGm}setUsername(t){this._userName=t}setUserID(t){this._userId=t}setIsGm(t){this._isGm=t}clearAllData(){this.clearAllDiceData(),this._systemInfo.clear()}clearSystemData(){this._systemInfo.clear()}addSystemData(t){this._systemInfo.addSystemData(t)}clearAllDiceData(){for(let t of this._diceInfo)t.clear()}clearDieData(t){var r;(r=this._diceInfo[t])==null||r.clear()}addDieData(t){this._diceInfo[t.type].addDieInfo(t)}addRollData(t,r){this._diceInfo[r].addNewRoll(t)}openPlayerForm(){}}const o=class o{constructor(){a(this,"_isPaused",!1);a(this,"_globalForm");a(this,"_compareForm");a(this,"_importExportForm");a(this,"_settingsForm");a(this,"diceStatsPlayerMap",new Map);this._globalForm={},this._compareForm={},this._importExportForm={},this._settingsForm={}}static getInstance(){return(!o._instance||o._instance==null)&&(o._instance=new o),o._instance}loadPlayers(){let t=game==null?void 0:game.users,r=game.system.id;if(t)for(var s of t){let i=new y(s._id,s.name,s.isGM,r);this.diceStatsPlayerMap.set(s.name,i),this.diceStatsPlayerMap.set(s._id,i)}}parseRollMessage(t){}saveRollValue(t,r,s){if(!this._isPaused){var i=this.diceStatsPlayerMap.get(t);i==null||i.addRollData(s,r)}}openGlobalForm(t=!1){}openCompareForm(t=!1){}openImportExportForm(t=!1){}openSettingsForm(t=!1){var s,i;var r=game;(s=r.user)==null||s.isGM,(i=r.i18n)==null||i.localize("")}openPlayerForm(t="",r="",s=!1){var i,c;t?(i=this.diceStatsPlayerMap.get(t))==null||i.openPlayerForm():r&&((c=this.diceStatsPlayerMap.get(r))==null||c.openPlayerForm())}changePauseState(t=!1){return this._isPaused=!this._isPaused,this._isPaused}getIsPaused(){return this._isPaused}};a(o,"_instance");let n=o;Hooks.once("init",()=>{console.log(`Initializing ${k}`),n.getInstance()});Hooks.once("ready",()=>{console.log("Scene Ready, We can load player data now!"),n.getInstance().loadPlayers()});
//# sourceMappingURL=module.js.map
